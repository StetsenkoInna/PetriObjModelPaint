/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package graphpresentation.statistic;

import graphpresentation.statistic.dto.configs.ChartConfigDto;
import graphpresentation.statistic.dto.configs.DataCollectionConfigDto;
import graphpresentation.statistic.services.ChartBuilderService;

import javax.swing.*;

/**
 * @author Andrii Kachmar
 */
public class ChartSettingsDialog extends javax.swing.JDialog {
    private ChartConfigDto chartConfigDto;
    private final ChartBuilderService chartBuilderService;

    /**
     * Creates new form ChartSettingsDialog
     */
    public ChartSettingsDialog(java.awt.Frame parent, boolean modal,
                               ChartConfigDto configDto, ChartBuilderService chartBuilderService) {
        super(parent, modal);
        this.chartConfigDto = configDto;
        this.chartBuilderService = chartBuilderService;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        chartConfigPanel = new javax.swing.JPanel();
        chartSettingsPanel = new javax.swing.JPanel();
        chartDataSettingsPanel = new javax.swing.JPanel();
        chartNamePane = new javax.swing.JPanel();
        chartNameLabel = new javax.swing.JLabel();
        chartNameField = new javax.swing.JTextField();
        xAxisPane = new javax.swing.JPanel();
        xAxisLabel = new javax.swing.JLabel();
        xAxisNameField = new javax.swing.JTextField();
        yAxisPane = new javax.swing.JPanel();
        yAxisLabel = new javax.swing.JLabel();
        yAxisNameField = new javax.swing.JTextField();
        displayMarkersLabel = new javax.swing.JLabel();
        displayMarkersPane = new javax.swing.JPanel();
        chartUpdateFrequencyPane = new javax.swing.JPanel();
        chartStartTimePane = new javax.swing.JPanel();
        chartDataCollectionStepPane = new javax.swing.JPanel();
        numberOfSeriesPane = new javax.swing.JPanel();
        numberOfSeriesLabel = new javax.swing.JLabel();
        numberOfSeriesField = new javax.swing.JTextField();
        actionsPanel = new javax.swing.JPanel();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        configChartConfigBtn = new javax.swing.JButton();
        cancelSelectionBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Chart settings");

        chartConfigPanel.setPreferredSize(new java.awt.Dimension(500, 250));
        chartConfigPanel.setLayout(new java.awt.GridLayout(1, 2));

        chartSettingsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Chart display config"));
        chartDataSettingsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Data collection config"));

        chartSettingsPanel.setLayout(new java.awt.GridLayout(4, 0));
        chartDataSettingsPanel.setLayout(new java.awt.GridLayout(4, 0));

        chartSettingsPanel.setPreferredSize(new java.awt.Dimension(250, 400));
        chartDataSettingsPanel.setPreferredSize(new java.awt.Dimension(250, 400));

        chartNamePane.setLayout(new java.awt.BorderLayout());

        chartNameField.setText(chartConfigDto.getTitle());
        chartNameField.setPreferredSize(new java.awt.Dimension(200, 25));
        chartNameLabel.setText("Chart name");
        chartNamePane.add(chartNameLabel, java.awt.BorderLayout.PAGE_START);
        chartNamePane.add(chartNameField, java.awt.BorderLayout.CENTER);

        chartSettingsPanel.add(chartNamePane);

        xAxisPane.setLayout(new java.awt.BorderLayout());

        xAxisNameField.setText(chartConfigDto.getxAxisTitle());
        xAxisLabel.setText("X axis name");
        xAxisPane.add(xAxisLabel, java.awt.BorderLayout.PAGE_START);
        xAxisPane.add(xAxisNameField, java.awt.BorderLayout.CENTER);

        chartSettingsPanel.add(xAxisPane);

        yAxisPane.setLayout(new java.awt.BorderLayout());

        yAxisNameField.setText(chartConfigDto.getyAxisTitle());
        yAxisLabel.setText("Y axis name");
        yAxisPane.add(yAxisLabel, java.awt.BorderLayout.PAGE_START);
        yAxisPane.add(yAxisNameField, java.awt.BorderLayout.CENTER);

        chartSettingsPanel.add(yAxisPane);

        displayMarkersLabel.setText("Display data markers");
        markerCheckBox = new JCheckBox("Is marker displayed");
        markerCheckBox.setSelected(chartConfigDto.getDisplayDataMarkers());
        displayMarkersPane.setLayout(new java.awt.BorderLayout());
        displayMarkersPane.add(displayMarkersLabel, java.awt.BorderLayout.PAGE_START);
        displayMarkersPane.add(markerCheckBox, java.awt.BorderLayout.CENTER);

        chartSettingsPanel.add(displayMarkersPane);

        chartUpdateFrequencyLabel = new JLabel("Data update frequency (s)");
        chartUpdateFrequencyField = new JTextField();
        chartUpdateFrequencyField.setText(chartConfigDto.getDataCollectionConfig().getDataUpdateFrequency().toString());
        chartUpdateFrequencyPane.setLayout(new java.awt.BorderLayout());
        chartUpdateFrequencyPane.add(chartUpdateFrequencyLabel, java.awt.BorderLayout.PAGE_START);
        chartUpdateFrequencyPane.add(chartUpdateFrequencyField, java.awt.BorderLayout.CENTER);

        chartStartTimeLabel = new JLabel("Data collection start time");
        chartStartTimeField = new JTextField();
        chartStartTimeField.setText(chartConfigDto.getDataCollectionConfig().getDataCollectionStartTime().toString());
        chartStartTimePane.setLayout(new java.awt.BorderLayout());
        chartStartTimePane.add(chartStartTimeLabel, java.awt.BorderLayout.PAGE_START);
        chartStartTimePane.add(chartStartTimeField, java.awt.BorderLayout.CENTER);

        chartDataSettingsPanel.add(chartStartTimePane);

        chartDataCollectionStepLabel = new JLabel("Data collection step");
        chartDataCollectionStepField = new JTextField();
        chartDataCollectionStepField.setText(chartConfigDto.getDataCollectionConfig().getDataCollectionStep().toString());
        chartDataCollectionStepPane.setLayout(new java.awt.BorderLayout());
        chartDataCollectionStepPane.add(chartDataCollectionStepLabel, java.awt.BorderLayout.PAGE_START);
        chartDataCollectionStepPane.add(chartDataCollectionStepField, java.awt.BorderLayout.CENTER);

        chartDataSettingsPanel.add(chartDataCollectionStepPane);

        numberOfSeriesLabel = new JLabel("Number of runs");
        numberOfSeriesField = new JTextField();
        numberOfSeriesField.setText(chartConfigDto.getDataCollectionConfig().getNumberOfRuns().toString());
        numberOfSeriesPane.setLayout(new java.awt.BorderLayout());
        numberOfSeriesPane.add(numberOfSeriesLabel, java.awt.BorderLayout.PAGE_START);
        numberOfSeriesPane.add(numberOfSeriesField, java.awt.BorderLayout.CENTER);

        chartDataSettingsPanel.add(numberOfSeriesPane);

        chartConfigPanel.add(chartSettingsPanel);
        chartConfigPanel.add(chartDataSettingsPanel);

        getContentPane().add(chartConfigPanel, java.awt.BorderLayout.CENTER);

        actionsPanel.add(filler1);

        configChartConfigBtn.setText("OK");
        configChartConfigBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        configChartConfigBtn.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        configChartConfigBtn.addActionListener(this::confirmChartConfigPerformed);
        actionsPanel.add(configChartConfigBtn);

        cancelSelectionBtn.setText("Cancel");
        cancelSelectionBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cancelSelectionBtn.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        cancelSelectionBtn.addActionListener(this::cancelSelectionBtnActionPerformed);
        actionsPanel.add(cancelSelectionBtn);

        getContentPane().add(actionsPanel, java.awt.BorderLayout.PAGE_END);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void confirmChartConfigPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectFunctionBtnActionPerformed
        chartConfigDto.setTitle(chartNameField.getText());
        chartConfigDto.setxAxisTitle(xAxisNameField.getText());
        chartConfigDto.setyAxisTitle(yAxisNameField.getText());
        chartConfigDto.setDisplayDataMarkers(markerCheckBox.isSelected());
        if (chartConfigDto.getDataCollectionConfig() == null) {
            chartConfigDto.setDataCollectionConfig(new DataCollectionConfigDto());
        }
        if (isValidNumber(chartDataCollectionStepField.getText())) {
            chartConfigDto.getDataCollectionConfig().setDataCollectionStep(chartDataCollectionStepField.getText());
        }
        if (isValidNumber(chartStartTimeField.getText())) {
            chartConfigDto.getDataCollectionConfig().setDataCollectionStartTime(chartStartTimeField.getText());
        }
        if (isValidNumber(numberOfSeriesField.getText())) {
            chartConfigDto.getDataCollectionConfig().setNumberOfRuns(numberOfSeriesField.getText());
        }
        chartBuilderService.updateChartConfig(chartConfigDto);
        dispose();
    }//GEN-LAST:event_selectFunctionBtnActionPerformed

    private boolean isValidNumber(String text) {
        return text.matches("\\d+(\\.\\d+)?");
    }

    private void cancelSelectionBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelSelectionBtnActionPerformed
        chartConfigDto = null;
        dispose();
    }//GEN-LAST:event_cancelSelectionBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel actionsPanel;
    private javax.swing.JButton cancelSelectionBtn;
    private javax.swing.JTextField chartNameField;
    private javax.swing.JLabel chartNameLabel;
    private javax.swing.JPanel chartNamePane;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JButton configChartConfigBtn;
    private javax.swing.JPanel chartConfigPanel;
    private javax.swing.JPanel chartSettingsPanel;
    private javax.swing.JPanel chartDataSettingsPanel;
    private javax.swing.JLabel xAxisLabel;
    private javax.swing.JTextField xAxisNameField;
    private javax.swing.JPanel xAxisPane;
    private javax.swing.JLabel yAxisLabel;
    private javax.swing.JTextField yAxisNameField;
    private javax.swing.JPanel yAxisPane;
    private javax.swing.JPanel displayMarkersPane;
    private javax.swing.JLabel displayMarkersLabel;
    private javax.swing.JCheckBox markerCheckBox;
    private javax.swing.JPanel chartUpdateFrequencyPane;
    private javax.swing.JLabel chartUpdateFrequencyLabel;
    private javax.swing.JTextField chartUpdateFrequencyField;
    private javax.swing.JPanel chartStartTimePane;
    private javax.swing.JLabel chartStartTimeLabel;
    private javax.swing.JTextField chartStartTimeField;
    private javax.swing.JPanel chartDataCollectionStepPane;
    private javax.swing.JLabel chartDataCollectionStepLabel;
    private javax.swing.JTextField chartDataCollectionStepField;
    private javax.swing.JPanel numberOfSeriesPane;
    private javax.swing.JLabel numberOfSeriesLabel;
    private javax.swing.JTextField numberOfSeriesField;

    // End of variables declaration//GEN-END:variables


    public ChartConfigDto getChartConfigDto() {
        return chartConfigDto;
    }
}
